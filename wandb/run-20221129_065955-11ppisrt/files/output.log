create web directory ./checkpoints/ellen_dwt_uresnet2_3_1128/web...
learning rate 0.0002000 -> 0.0002000
/opt/conda/lib/python3.8/site-packages/torch/optim/lr_scheduler.py:129: UserWarning: Detected call of `lr_scheduler.step()` before `optimizer.step()`. In PyTorch 1.1.0 and later, you should call them in the opposite order: `optimizer.step()` before `lr_scheduler.step()`.  Failure to do this will result in PyTorch skipping the first value of the learning rate schedule. See more details at https://pytorch.org/docs/stable/optim.html#how-to-adjust-learning-rate
  warnings.warn("Detected call of `lr_scheduler.step()` before `optimizer.step()`. "
/opt/conda/lib/python3.8/site-packages/torch/nn/functional.py:3454: UserWarning: Default upsampling behavior when mode=bilinear is changed to align_corners=False since 0.4.0. Please specify align_corners=True if the old behavior is desired. See the documentation of nn.Upsample for details.
  warnings.warn(
(epoch: 1, iters: 6, time: 2.407, data: 0.286) D_A: 1.701 G_A: 2.340 cycle_A: 9.369 idt_A: 5.251 D_B: 3.675 G_B: 5.162 cycle_B: 5.281 idt_B: 2.366
(epoch: 1, iters: 12, time: 0.203, data: 0.286) D_A: 5.964 G_A: 2.424 cycle_A: 8.575 idt_A: 3.805 D_B: 6.116 G_B: 4.792 cycle_B: 3.872 idt_B: 2.233
(epoch: 1, iters: 18, time: 0.220, data: 0.286) D_A: 3.847 G_A: 2.734 cycle_A: 7.623 idt_A: 4.363 D_B: 5.199 G_B: 3.157 cycle_B: 4.326 idt_B: 1.976
(epoch: 1, iters: 24, time: 0.220, data: 0.286) D_A: 3.589 G_A: 3.719 cycle_A: 8.932 idt_A: 4.999 D_B: 2.719 G_B: 2.934 cycle_B: 4.853 idt_B: 2.273
(epoch: 1, iters: 30, time: 0.216, data: 0.286) D_A: 2.943 G_A: 3.843 cycle_A: 8.520 idt_A: 3.454 D_B: 4.786 G_B: 5.862 cycle_B: 3.273 idt_B: 2.160
(epoch: 1, iters: 36, time: 0.230, data: 0.286) D_A: 1.111 G_A: 1.587 cycle_A: 8.126 idt_A: 3.723 D_B: 2.652 G_B: 4.337 cycle_B: 3.456 idt_B: 2.077
(epoch: 1, iters: 42, time: 0.217, data: 0.286) D_A: 0.603 G_A: 0.788 cycle_A: 5.816 idt_A: 3.867 D_B: 0.741 G_B: 1.171 cycle_B: 3.542 idt_B: 1.516
(epoch: 1, iters: 48, time: 0.230, data: 0.286) D_A: 0.526 G_A: 0.746 cycle_A: 7.536 idt_A: 4.362 D_B: 0.558 G_B: 0.757 cycle_B: 4.064 idt_B: 1.948
(epoch: 1, iters: 54, time: 0.221, data: 0.286) D_A: 0.535 G_A: 0.740 cycle_A: 8.212 idt_A: 3.980 D_B: 0.559 G_B: 0.828 cycle_B: 3.672 idt_B: 2.184
(epoch: 1, iters: 60, time: 0.219, data: 0.286) D_A: 0.373 G_A: 0.610 cycle_A: 5.607 idt_A: 4.112 D_B: 0.403 G_B: 0.693 cycle_B: 3.755 idt_B: 1.541
(epoch: 1, iters: 66, time: 0.232, data: 0.286) D_A: 0.417 G_A: 0.544 cycle_A: 9.163 idt_A: 3.876 D_B: 0.445 G_B: 0.702 cycle_B: 3.736 idt_B: 2.410
(epoch: 1, iters: 72, time: 0.214, data: 0.286) D_A: 0.407 G_A: 0.469 cycle_A: 9.890 idt_A: 3.932 D_B: 0.372 G_B: 0.643 cycle_B: 3.894 idt_B: 2.563
(epoch: 1, iters: 78, time: 0.218, data: 0.286) D_A: 0.415 G_A: 0.506 cycle_A: 9.674 idt_A: 3.763 D_B: 0.403 G_B: 0.598 cycle_B: 3.603 idt_B: 2.537
(epoch: 1, iters: 84, time: 0.216, data: 0.286) D_A: 0.429 G_A: 0.583 cycle_A: 8.576 idt_A: 2.714 D_B: 0.392 G_B: 0.644 cycle_B: 2.677 idt_B: 2.250
(epoch: 1, iters: 90, time: 0.216, data: 0.286) D_A: 0.681 G_A: 0.697 cycle_A: 5.475 idt_A: 3.939 D_B: 0.398 G_B: 0.578 cycle_B: 4.002 idt_B: 1.457
(epoch: 1, iters: 96, time: 0.235, data: 0.286) D_A: 0.415 G_A: 0.517 cycle_A: 5.101 idt_A: 3.452 D_B: 0.406 G_B: 0.498 cycle_B: 3.391 idt_B: 1.368
(epoch: 1, iters: 102, time: 0.222, data: 0.286) D_A: 0.343 G_A: 0.562 cycle_A: 5.725 idt_A: 3.014 D_B: 0.398 G_B: 0.481 cycle_B: 2.957 idt_B: 1.500
(epoch: 1, iters: 108, time: 0.225, data: 0.286) D_A: 0.392 G_A: 0.475 cycle_A: 5.642 idt_A: 3.746 D_B: 0.448 G_B: 0.590 cycle_B: 3.712 idt_B: 1.490
(epoch: 1, iters: 114, time: 0.225, data: 0.286) D_A: 0.383 G_A: 0.360 cycle_A: 6.228 idt_A: 3.878 D_B: 0.513 G_B: 0.604 cycle_B: 3.934 idt_B: 1.585
(epoch: 1, iters: 120, time: 0.216, data: 0.286) D_A: 0.404 G_A: 0.420 cycle_A: 6.552 idt_A: 2.557 D_B: 0.566 G_B: 0.774 cycle_B: 2.496 idt_B: 1.695
(epoch: 1, iters: 126, time: 0.214, data: 0.286) D_A: 0.328 G_A: 0.305 cycle_A: 7.036 idt_A: 3.298 D_B: 0.616 G_B: 0.568 cycle_B: 3.362 idt_B: 1.787
(epoch: 1, iters: 132, time: 0.232, data: 0.286) D_A: 0.271 G_A: 0.349 cycle_A: 6.547 idt_A: 2.783 D_B: 0.608 G_B: 0.778 cycle_B: 2.801 idt_B: 1.692
(epoch: 1, iters: 138, time: 0.208, data: 0.286) D_A: 0.286 G_A: 0.316 cycle_A: 7.353 idt_A: 2.506 D_B: 0.704 G_B: 0.978 cycle_B: 2.588 idt_B: 1.784
(epoch: 1, iters: 144, time: 0.211, data: 0.286) D_A: 0.351 G_A: 0.339 cycle_A: 6.864 idt_A: 2.799 D_B: 0.572 G_B: 0.938 cycle_B: 2.836 idt_B: 1.780
(epoch: 1, iters: 150, time: 0.208, data: 0.286) D_A: 0.383 G_A: 0.434 cycle_A: 6.290 idt_A: 2.543 D_B: 0.433 G_B: 0.301 cycle_B: 2.601 idt_B: 1.542
(epoch: 1, iters: 156, time: 0.208, data: 0.286) D_A: 1.100 G_A: 1.737 cycle_A: 6.498 idt_A: 2.630 D_B: 0.330 G_B: 0.207 cycle_B: 2.677 idt_B: 1.645
(epoch: 1, iters: 162, time: 0.191, data: 0.286) D_A: 3.730 G_A: 4.934 cycle_A: 4.566 idt_A: 2.790 D_B: 0.490 G_B: 0.426 cycle_B: 2.886 idt_B: 1.163
(epoch: 1, iters: 168, time: 0.218, data: 0.286) D_A: 3.360 G_A: 3.777 cycle_A: 5.229 idt_A: 2.682 D_B: 0.540 G_B: 0.698 cycle_B: 2.728 idt_B: 1.233
(epoch: 1, iters: 174, time: 0.213, data: 0.286) D_A: 0.868 G_A: 1.013 cycle_A: 6.024 idt_A: 2.325 D_B: 0.535 G_B: 0.754 cycle_B: 2.418 idt_B: 1.434
(epoch: 1, iters: 180, time: 0.214, data: 0.286) D_A: 0.519 G_A: 0.484 cycle_A: 8.180 idt_A: 2.280 D_B: 0.443 G_B: 0.390 cycle_B: 2.324 idt_B: 2.030
(epoch: 1, iters: 186, time: 0.203, data: 0.286) D_A: 0.482 G_A: 0.542 cycle_A: 5.898 idt_A: 2.580 D_B: 0.366 G_B: 0.460 cycle_B: 2.653 idt_B: 1.484
(epoch: 1, iters: 192, time: 0.216, data: 0.286) D_A: 0.450 G_A: 0.440 cycle_A: 6.921 idt_A: 1.716 D_B: 0.312 G_B: 0.305 cycle_B: 1.824 idt_B: 1.644
(epoch: 1, iters: 198, time: 0.221, data: 0.286) D_A: 0.357 G_A: 0.450 cycle_A: 7.192 idt_A: 2.421 D_B: 0.335 G_B: 0.244 cycle_B: 2.532 idt_B: 1.768
(epoch: 1, iters: 204, time: 0.215, data: 0.286) D_A: 0.325 G_A: 0.336 cycle_A: 6.159 idt_A: 2.847 D_B: 0.316 G_B: 0.302 cycle_B: 2.970 idt_B: 1.453
(epoch: 1, iters: 210, time: 0.214, data: 0.286) D_A: 0.290 G_A: 0.388 cycle_A: 5.587 idt_A: 2.113 D_B: 0.356 G_B: 0.546 cycle_B: 2.216 idt_B: 1.366
(epoch: 1, iters: 216, time: 0.199, data: 0.286) D_A: 0.269 G_A: 0.279 cycle_A: 5.811 idt_A: 2.155 D_B: 0.424 G_B: 0.568 cycle_B: 2.254 idt_B: 1.431
(epoch: 1, iters: 222, time: 0.213, data: 0.286) D_A: 0.253 G_A: 0.310 cycle_A: 7.291 idt_A: 2.083 D_B: 0.533 G_B: 0.807 cycle_B: 2.203 idt_B: 1.791
(epoch: 1, iters: 228, time: 0.201, data: 0.286) D_A: 0.290 G_A: 0.346 cycle_A: 5.830 idt_A: 2.474 D_B: 0.616 G_B: 0.609 cycle_B: 2.723 idt_B: 1.382
(epoch: 1, iters: 234, time: 0.226, data: 0.286) D_A: 0.277 G_A: 0.341 cycle_A: 6.112 idt_A: 2.335 D_B: 0.764 G_B: 1.295 cycle_B: 2.517 idt_B: 1.542
(epoch: 1, iters: 240, time: 0.219, data: 0.286) D_A: 0.261 G_A: 0.350 cycle_A: 5.144 idt_A: 1.953 D_B: 0.749 G_B: 0.925 cycle_B: 2.198 idt_B: 1.281
(epoch: 1, iters: 246, time: 0.219, data: 0.286) D_A: 0.289 G_A: 0.334 cycle_A: 6.925 idt_A: 3.084 D_B: 0.674 G_B: 0.859 cycle_B: 3.254 idt_B: 1.690
(epoch: 1, iters: 252, time: 0.218, data: 0.286) D_A: 0.271 G_A: 0.333 cycle_A: 4.354 idt_A: 2.542 D_B: 0.554 G_B: 0.642 cycle_B: 2.761 idt_B: 1.042
(epoch: 1, iters: 258, time: 0.223, data: 0.286) D_A: 0.245 G_A: 0.331 cycle_A: 4.698 idt_A: 2.116 D_B: 0.460 G_B: 0.708 cycle_B: 2.277 idt_B: 1.159
(epoch: 1, iters: 264, time: 0.216, data: 0.286) D_A: 0.263 G_A: 0.413 cycle_A: 4.436 idt_A: 2.389 D_B: 0.322 G_B: 0.480 cycle_B: 2.576 idt_B: 1.076
(epoch: 1, iters: 270, time: 0.221, data: 0.286) D_A: 0.225 G_A: 0.331 cycle_A: 4.254 idt_A: 1.782 D_B: 0.295 G_B: 0.477 cycle_B: 1.875 idt_B: 1.042
(epoch: 1, iters: 276, time: 0.213, data: 0.286) D_A: 0.258 G_A: 0.278 cycle_A: 5.640 idt_A: 2.945 D_B: 0.299 G_B: 0.425 cycle_B: 3.221 idt_B: 1.197
(epoch: 1, iters: 282, time: 0.206, data: 0.286) D_A: 0.232 G_A: 0.384 cycle_A: 5.587 idt_A: 2.304 D_B: 0.325 G_B: 0.482 cycle_B: 2.603 idt_B: 1.184
(epoch: 1, iters: 288, time: 0.211, data: 0.286) D_A: 0.238 G_A: 0.386 cycle_A: 5.680 idt_A: 1.917 D_B: 0.310 G_B: 0.435 cycle_B: 2.123 idt_B: 1.399
(epoch: 1, iters: 294, time: 0.214, data: 0.286) D_A: 0.262 G_A: 0.459 cycle_A: 4.914 idt_A: 2.118 D_B: 0.258 G_B: 0.382 cycle_B: 2.365 idt_B: 1.165
(epoch: 1, iters: 300, time: 0.215, data: 0.286) D_A: 0.222 G_A: 0.369 cycle_A: 5.926 idt_A: 1.785 D_B: 0.284 G_B: 0.385 cycle_B: 1.918 idt_B: 1.491
(epoch: 1, iters: 300, time: 0.215, data: 0.286) D_A: 0.222 G_A: 0.369 cycle_A: 5.926 idt_A: 1.785 D_B: 0.284 G_B: 0.385 cycle_B: 1.918 idt_B: 1.491
(epoch: 1, iters: 306, time: 0.210, data: 0.005) D_A: 0.207 G_A: 0.356 cycle_A: 6.546 idt_A: 1.922 D_B: 0.219 G_B: 0.341 cycle_B: 2.076 idt_B: 1.635
(epoch: 1, iters: 312, time: 0.225, data: 0.005) D_A: 0.212 G_A: 0.421 cycle_A: 3.392 idt_A: 2.232 D_B: 0.293 G_B: 0.328 cycle_B: 2.382 idt_B: 0.742
(epoch: 1, iters: 318, time: 0.224, data: 0.005) D_A: 0.216 G_A: 0.342 cycle_A: 6.522 idt_A: 2.233 D_B: 0.291 G_B: 0.422 cycle_B: 2.387 idt_B: 1.613
(epoch: 1, iters: 324, time: 0.222, data: 0.005) D_A: 0.202 G_A: 0.433 cycle_A: 4.811 idt_A: 1.828 D_B: 0.277 G_B: 0.467 cycle_B: 1.931 idt_B: 1.143
(epoch: 1, iters: 330, time: 0.220, data: 0.005) D_A: 0.207 G_A: 0.412 cycle_A: 3.720 idt_A: 1.771 D_B: 0.276 G_B: 0.530 cycle_B: 1.951 idt_B: 0.930
(epoch: 1, iters: 336, time: 0.233, data: 0.005) D_A: 0.204 G_A: 0.317 cycle_A: 6.218 idt_A: 1.901 D_B: 0.297 G_B: 0.526 cycle_B: 2.075 idt_B: 1.611
(epoch: 1, iters: 342, time: 0.224, data: 0.005) D_A: 0.254 G_A: 0.387 cycle_A: 7.496 idt_A: 1.861 D_B: 0.222 G_B: 0.452 cycle_B: 2.268 idt_B: 1.770
(epoch: 1, iters: 348, time: 0.207, data: 0.005) D_A: 0.251 G_A: 0.348 cycle_A: 5.545 idt_A: 1.913 D_B: 0.268 G_B: 0.563 cycle_B: 2.006 idt_B: 1.261
(epoch: 1, iters: 354, time: 0.225, data: 0.005) D_A: 0.253 G_A: 0.386 cycle_A: 5.768 idt_A: 1.502 D_B: 0.248 G_B: 0.486 cycle_B: 1.712 idt_B: 1.474
(epoch: 1, iters: 360, time: 0.212, data: 0.005) D_A: 0.223 G_A: 0.435 cycle_A: 4.104 idt_A: 2.075 D_B: 0.286 G_B: 0.349 cycle_B: 2.228 idt_B: 0.996
(epoch: 1, iters: 366, time: 0.225, data: 0.005) D_A: 0.288 G_A: 0.399 cycle_A: 3.865 idt_A: 1.705 D_B: 0.290 G_B: 0.344 cycle_B: 1.824 idt_B: 0.918
(epoch: 1, iters: 372, time: 0.221, data: 0.005) D_A: 0.281 G_A: 0.445 cycle_A: 3.864 idt_A: 1.858 D_B: 0.276 G_B: 0.256 cycle_B: 1.967 idt_B: 0.971
(epoch: 1, iters: 378, time: 0.219, data: 0.005) D_A: 0.302 G_A: 0.470 cycle_A: 4.235 idt_A: 2.418 D_B: 0.229 G_B: 0.280 cycle_B: 2.509 idt_B: 1.043
(epoch: 1, iters: 384, time: 0.216, data: 0.005) D_A: 0.296 G_A: 0.464 cycle_A: 3.639 idt_A: 1.975 D_B: 0.215 G_B: 0.382 cycle_B: 2.205 idt_B: 0.905
(epoch: 1, iters: 390, time: 0.210, data: 0.005) D_A: 0.244 G_A: 0.495 cycle_A: 3.360 idt_A: 1.696 D_B: 0.255 G_B: 0.510 cycle_B: 1.870 idt_B: 0.891
(epoch: 1, iters: 396, time: 0.221, data: 0.005) D_A: 0.291 G_A: 0.403 cycle_A: 6.656 idt_A: 1.412 D_B: 0.215 G_B: 0.425 cycle_B: 1.643 idt_B: 1.649
(epoch: 1, iters: 402, time: 0.218, data: 0.005) D_A: 0.240 G_A: 0.332 cycle_A: 5.013 idt_A: 1.386 D_B: 0.283 G_B: 0.421 cycle_B: 1.668 idt_B: 1.287
(epoch: 1, iters: 408, time: 0.219, data: 0.005) D_A: 0.227 G_A: 0.355 cycle_A: 4.659 idt_A: 1.843 D_B: 0.253 G_B: 0.347 cycle_B: 2.134 idt_B: 1.174
(epoch: 1, iters: 414, time: 0.223, data: 0.005) D_A: 0.225 G_A: 0.340 cycle_A: 4.545 idt_A: 2.215 D_B: 0.287 G_B: 0.424 cycle_B: 2.314 idt_B: 1.114
(epoch: 1, iters: 420, time: 0.212, data: 0.005) D_A: 0.238 G_A: 0.444 cycle_A: 4.478 idt_A: 1.443 D_B: 0.337 G_B: 0.587 cycle_B: 1.514 idt_B: 1.072
(epoch: 1, iters: 426, time: 0.221, data: 0.005) D_A: 0.219 G_A: 0.542 cycle_A: 4.750 idt_A: 1.852 D_B: 0.342 G_B: 0.718 cycle_B: 2.007 idt_B: 1.264
(epoch: 1, iters: 432, time: 0.223, data: 0.005) D_A: 0.218 G_A: 0.455 cycle_A: 5.476 idt_A: 1.464 D_B: 0.318 G_B: 0.630 cycle_B: 1.636 idt_B: 1.516
(epoch: 1, iters: 438, time: 0.240, data: 0.005) D_A: 0.245 G_A: 0.376 cycle_A: 4.712 idt_A: 2.008 D_B: 0.379 G_B: 0.476 cycle_B: 2.298 idt_B: 1.069
(epoch: 1, iters: 444, time: 0.232, data: 0.005) D_A: 0.215 G_A: 0.409 cycle_A: 4.463 idt_A: 1.818 D_B: 0.381 G_B: 0.528 cycle_B: 1.957 idt_B: 1.088
(epoch: 1, iters: 450, time: 0.222, data: 0.005) D_A: 0.247 G_A: 0.369 cycle_A: 5.273 idt_A: 1.767 D_B: 0.359 G_B: 0.766 cycle_B: 2.064 idt_B: 1.397
(epoch: 1, iters: 456, time: 0.221, data: 0.005) D_A: 0.218 G_A: 0.390 cycle_A: 4.645 idt_A: 1.452 D_B: 0.382 G_B: 0.548 cycle_B: 1.612 idt_B: 1.132
(epoch: 1, iters: 462, time: 0.214, data: 0.005) D_A: 0.284 G_A: 0.320 cycle_A: 3.600 idt_A: 1.527 D_B: 0.375 G_B: 0.351 cycle_B: 1.770 idt_B: 0.817
(epoch: 1, iters: 468, time: 0.212, data: 0.005) D_A: 0.204 G_A: 0.469 cycle_A: 4.359 idt_A: 2.659 D_B: 0.249 G_B: 0.376 cycle_B: 3.157 idt_B: 0.996
(epoch: 1, iters: 474, time: 0.233, data: 0.005) D_A: 0.231 G_A: 0.374 cycle_A: 5.208 idt_A: 1.752 D_B: 0.214 G_B: 0.541 cycle_B: 1.982 idt_B: 1.118
(epoch: 1, iters: 480, time: 0.221, data: 0.005) D_A: 0.230 G_A: 0.460 cycle_A: 4.831 idt_A: 1.947 D_B: 0.247 G_B: 0.360 cycle_B: 2.123 idt_B: 1.240
(epoch: 1, iters: 486, time: 0.213, data: 0.005) D_A: 0.200 G_A: 0.378 cycle_A: 3.899 idt_A: 1.781 D_B: 0.279 G_B: 0.445 cycle_B: 2.013 idt_B: 1.106
(epoch: 1, iters: 492, time: 0.217, data: 0.005) D_A: 0.241 G_A: 0.306 cycle_A: 3.935 idt_A: 2.150 D_B: 0.313 G_B: 0.535 cycle_B: 2.226 idt_B: 0.885
(epoch: 1, iters: 498, time: 0.217, data: 0.005) D_A: 0.222 G_A: 0.520 cycle_A: 4.667 idt_A: 1.814 D_B: 0.302 G_B: 0.298 cycle_B: 2.203 idt_B: 1.017
(epoch: 1, iters: 504, time: 0.217, data: 0.005) D_A: 0.224 G_A: 0.514 cycle_A: 4.057 idt_A: 1.388 D_B: 0.227 G_B: 0.407 cycle_B: 1.569 idt_B: 1.102
(epoch: 1, iters: 510, time: 0.234, data: 0.005) D_A: 0.216 G_A: 0.328 cycle_A: 4.058 idt_A: 2.166 D_B: 0.289 G_B: 0.431 cycle_B: 2.268 idt_B: 1.094
(epoch: 1, iters: 516, time: 0.216, data: 0.005) D_A: 0.241 G_A: 0.364 cycle_A: 3.726 idt_A: 1.537 D_B: 0.285 G_B: 0.465 cycle_B: 1.695 idt_B: 0.985
(epoch: 1, iters: 522, time: 0.222, data: 0.005) D_A: 0.253 G_A: 0.516 cycle_A: 4.176 idt_A: 1.722 D_B: 0.219 G_B: 0.326 cycle_B: 1.920 idt_B: 1.166
(epoch: 1, iters: 528, time: 0.222, data: 0.005) D_A: 0.281 G_A: 0.618 cycle_A: 3.976 idt_A: 2.782 D_B: 0.250 G_B: 0.345 cycle_B: 2.889 idt_B: 1.141
(epoch: 1, iters: 534, time: 0.223, data: 0.005) D_A: 0.382 G_A: 0.643 cycle_A: 3.455 idt_A: 1.913 D_B: 0.238 G_B: 0.436 cycle_B: 2.317 idt_B: 0.905
(epoch: 1, iters: 540, time: 0.217, data: 0.005) D_A: 0.271 G_A: 0.585 cycle_A: 5.239 idt_A: 1.541 D_B: 0.204 G_B: 0.377 cycle_B: 1.752 idt_B: 1.423
(epoch: 1, iters: 546, time: 0.227, data: 0.005) D_A: 0.257 G_A: 0.354 cycle_A: 3.155 idt_A: 1.878 D_B: 0.255 G_B: 0.521 cycle_B: 1.993 idt_B: 0.814
(epoch: 1, iters: 552, time: 0.217, data: 0.005) D_A: 0.278 G_A: 0.460 cycle_A: 3.167 idt_A: 1.573 D_B: 0.281 G_B: 0.370 cycle_B: 2.011 idt_B: 0.681
(epoch: 1, iters: 558, time: 0.211, data: 0.005) D_A: 0.227 G_A: 0.467 cycle_A: 3.564 idt_A: 1.548 D_B: 0.253 G_B: 0.494 cycle_B: 1.918 idt_B: 0.717
(epoch: 1, iters: 564, time: 0.208, data: 0.005) D_A: 0.263 G_A: 0.318 cycle_A: 4.759 idt_A: 2.084 D_B: 0.216 G_B: 0.342 cycle_B: 2.780 idt_B: 1.113
(epoch: 1, iters: 570, time: 0.217, data: 0.005) D_A: 0.220 G_A: 0.342 cycle_A: 4.543 idt_A: 1.553 D_B: 0.212 G_B: 0.421 cycle_B: 1.766 idt_B: 1.080
(epoch: 1, iters: 576, time: 0.233, data: 0.005) D_A: 0.211 G_A: 0.481 cycle_A: 4.000 idt_A: 2.046 D_B: 0.286 G_B: 0.366 cycle_B: 2.840 idt_B: 0.861
(epoch: 1, iters: 582, time: 0.215, data: 0.005) D_A: 0.231 G_A: 0.416 cycle_A: 5.630 idt_A: 1.774 D_B: 0.244 G_B: 0.397 cycle_B: 1.863 idt_B: 1.289
(epoch: 1, iters: 588, time: 0.212, data: 0.005) D_A: 0.244 G_A: 0.313 cycle_A: 3.856 idt_A: 1.660 D_B: 0.238 G_B: 0.521 cycle_B: 1.905 idt_B: 0.974
(epoch: 1, iters: 594, time: 0.227, data: 0.005) D_A: 0.222 G_A: 0.427 cycle_A: 3.545 idt_A: 1.549 D_B: 0.249 G_B: 0.494 cycle_B: 1.797 idt_B: 0.930
(epoch: 1, iters: 600, time: 0.225, data: 0.005) D_A: 0.173 G_A: 0.446 cycle_A: 2.862 idt_A: 1.750 D_B: 0.294 G_B: 0.364 cycle_B: 1.797 idt_B: 0.774
(epoch: 1, iters: 600, time: 0.225, data: 0.005) D_A: 0.173 G_A: 0.446 cycle_A: 2.862 idt_A: 1.750 D_B: 0.294 G_B: 0.364 cycle_B: 1.797 idt_B: 0.774
[val] (epoch: 1 , iter:  0 )
[val] (epoch: 1 , iter:  1 )
[val] (epoch: 1 , iter:  2 )
[val] (epoch: 1 , iter:  3 )
[val] (epoch: 1 , iter:  4 )
[val] (epoch: 1 , iter:  5 )
[val] (epoch: 1 , iter:  6 )
[val] (epoch: 1 , iter:  7 )
[val] (epoch: 1 , iter:  8 )
[val] (epoch: 1 , iter:  9 )
[val] (epoch: 1 , iter:  10 )
[val] (epoch: 1 , iter:  11 )
[val] (epoch: 1 , iter:  12 )
[val] (epoch: 1 , iter:  13 )
[val] (epoch: 1 , iter:  14 )
[val] (epoch: 1 , iter:  15 )
[val] (epoch: 1 , iter:  16 )
[val] (epoch: 1 , iter:  17 )
[val] (epoch: 1 , iter:  18 )
[val] (epoch: 1 , iter:  19 )
[val] (epoch: 1 , iter:  20 )
Traceback (most recent call last):
  File "train.py", line 162, in <module>
    iter_current_val_loss_G.append(model.forward_val_get_loss())# val loss가져오기
  File "/root/jieunoh/ellen_code/RetinaImage_model_MW/models/cycle_gan_model.py", line 125, in forward_val_get_loss
    self.rec_A = self.netG_B(self.fake_B)   # G_B(G_A(A))
  File "/opt/conda/lib/python3.8/site-packages/torch/nn/modules/module.py", line 889, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/opt/conda/lib/python3.8/site-packages/torch/nn/parallel/data_parallel.py", line 167, in forward
    outputs = self.parallel_apply(replicas, inputs, kwargs)
  File "/opt/conda/lib/python3.8/site-packages/torch/nn/parallel/data_parallel.py", line 177, in parallel_apply
    return parallel_apply(replicas, inputs, kwargs, self.device_ids[:len(replicas)])
  File "/opt/conda/lib/python3.8/site-packages/torch/nn/parallel/parallel_apply.py", line 86, in parallel_apply
    output.reraise()
  File "/opt/conda/lib/python3.8/site-packages/torch/_utils.py", line 429, in reraise
    raise self.exc_type(msg)
RuntimeError: Caught RuntimeError in replica 1 on device 1.
Original Traceback (most recent call last):
  File "/opt/conda/lib/python3.8/site-packages/torch/nn/parallel/parallel_apply.py", line 61, in _worker
    output = module(*input, **kwargs)
  File "/opt/conda/lib/python3.8/site-packages/torch/nn/modules/module.py", line 889, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/root/jieunoh/ellen_code/RetinaImage_model_MW/models/networks.py", line 1336, in forward
    result_uresnet = self.uresnet(input)
  File "/opt/conda/lib/python3.8/site-packages/torch/nn/modules/module.py", line 889, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/root/jieunoh/ellen_code/RetinaImage_model_MW/models/networks.py", line 820, in forward
    return self.model(input)
  File "/opt/conda/lib/python3.8/site-packages/torch/nn/modules/module.py", line 889, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/opt/conda/lib/python3.8/site-packages/torch/nn/modules/container.py", line 119, in forward
    input = module(input)
  File "/opt/conda/lib/python3.8/site-packages/torch/nn/modules/module.py", line 889, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/opt/conda/lib/python3.8/site-packages/torch/nn/modules/instancenorm.py", line 57, in forward
    return F.instance_norm(
  File "/opt/conda/lib/python3.8/site-packages/torch/nn/functional.py", line 2185, in instance_norm
    return torch.instance_norm(
RuntimeError: CUDA out of memory. Tried to allocate 16.00 MiB (GPU 1; 23.70 GiB total capacity; 22.24 GiB already allocated; 13.69 MiB free; 22.31 GiB reserved in total by PyTorch)