create web directory ./checkpoints/ellen_dwt_uresnet2_3_1128/web...
learning rate 0.0002000 -> 0.0002000
/home/guest1/.conda/envs/ellen/lib/python3.7/site-packages/torch/optim/lr_scheduler.py:134: UserWarning: Detected call of `lr_scheduler.step()` before `optimizer.step()`. In PyTorch 1.1.0 and later, you should call them in the opposite order: `optimizer.step()` before `lr_scheduler.step()`.  Failure to do this will result in PyTorch skipping the first value of the learning rate schedule. See more details at https://pytorch.org/docs/stable/optim.html#how-to-adjust-learning-rate
  "https://pytorch.org/docs/stable/optim.html#how-to-adjust-learning-rate", UserWarning)
/home/guest1/.conda/envs/ellen/lib/python3.7/site-packages/torch/nn/functional.py:3635: UserWarning: Default upsampling behavior when mode=bilinear is changed to align_corners=False since 0.4.0. Please specify align_corners=True if the old behavior is desired. See the documentation of nn.Upsample for details.
  "See the documentation of nn.Upsample for details.".format(mode)
(epoch: 1, iters: 4, time: 1.112, data: 0.145) D_A: 1.432 G_A: 1.389 cycle_A: 13.611 idt_A: 6.639 D_B: 3.439 G_B: 4.805 cycle_B: 6.582 idt_B: 3.433
(epoch: 1, iters: 8, time: 0.232, data: 0.145) D_A: 7.340 G_A: 6.762 cycle_A: 11.674 idt_A: 6.288 D_B: 13.925 G_B: 12.860 cycle_B: 6.294 idt_B: 3.019
(epoch: 1, iters: 12, time: 0.173, data: 0.145) D_A: 3.183 G_A: 4.312 cycle_A: 11.275 idt_A: 6.184 D_B: 3.315 G_B: 2.900 cycle_B: 6.176 idt_B: 2.882
(epoch: 1, iters: 16, time: 0.178, data: 0.145) D_A: 5.386 G_A: 5.874 cycle_A: 12.970 idt_A: 5.869 D_B: 1.610 G_B: 2.633 cycle_B: 5.823 idt_B: 3.293
(epoch: 1, iters: 20, time: 0.176, data: 0.145) D_A: 5.201 G_A: 5.776 cycle_A: 11.301 idt_A: 5.459 D_B: 2.709 G_B: 3.144 cycle_B: 5.313 idt_B: 2.916
(epoch: 1, iters: 24, time: 0.174, data: 0.145) D_A: 2.053 G_A: 2.019 cycle_A: 10.297 idt_A: 5.289 D_B: 1.163 G_B: 1.806 cycle_B: 5.277 idt_B: 2.723
(epoch: 1, iters: 28, time: 0.174, data: 0.145) D_A: 1.338 G_A: 2.129 cycle_A: 10.406 idt_A: 5.192 D_B: 0.589 G_B: 0.662 cycle_B: 5.139 idt_B: 2.780
(epoch: 1, iters: 32, time: 0.176, data: 0.145) D_A: 0.611 G_A: 0.882 cycle_A: 7.962 idt_A: 5.139 D_B: 0.624 G_B: 0.585 cycle_B: 5.002 idt_B: 2.169
(epoch: 1, iters: 36, time: 0.180, data: 0.145) D_A: 0.667 G_A: 0.954 cycle_A: 8.433 idt_A: 4.819 D_B: 0.493 G_B: 0.542 cycle_B: 4.768 idt_B: 2.323
(epoch: 1, iters: 40, time: 0.174, data: 0.145) D_A: 0.477 G_A: 0.646 cycle_A: 9.342 idt_A: 4.270 D_B: 0.397 G_B: 0.550 cycle_B: 4.153 idt_B: 2.468
(epoch: 1, iters: 44, time: 0.190, data: 0.145) D_A: 0.469 G_A: 0.625 cycle_A: 7.872 idt_A: 3.677 D_B: 0.390 G_B: 0.648 cycle_B: 3.595 idt_B: 2.093
(epoch: 1, iters: 48, time: 0.180, data: 0.145) D_A: 0.360 G_A: 0.590 cycle_A: 7.631 idt_A: 3.901 D_B: 0.395 G_B: 0.598 cycle_B: 3.861 idt_B: 2.009
(epoch: 1, iters: 52, time: 0.170, data: 0.145) D_A: 0.460 G_A: 0.670 cycle_A: 7.127 idt_A: 3.351 D_B: 0.453 G_B: 0.522 cycle_B: 3.381 idt_B: 1.927
(epoch: 1, iters: 56, time: 0.176, data: 0.145) D_A: 0.359 G_A: 0.628 cycle_A: 7.212 idt_A: 3.207 D_B: 0.440 G_B: 0.690 cycle_B: 3.234 idt_B: 1.869
(epoch: 1, iters: 60, time: 0.173, data: 0.145) D_A: 0.442 G_A: 0.735 cycle_A: 7.292 idt_A: 2.820 D_B: 0.457 G_B: 0.486 cycle_B: 2.797 idt_B: 1.874
(epoch: 1, iters: 64, time: 0.172, data: 0.145) D_A: 0.689 G_A: 1.170 cycle_A: 5.889 idt_A: 2.675 D_B: 0.737 G_B: 0.811 cycle_B: 2.763 idt_B: 1.510
(epoch: 1, iters: 68, time: 0.178, data: 0.145) D_A: 0.491 G_A: 0.841 cycle_A: 4.959 idt_A: 2.628 D_B: 1.102 G_B: 1.213 cycle_B: 2.689 idt_B: 1.289
(epoch: 1, iters: 72, time: 0.175, data: 0.145) D_A: 0.275 G_A: 0.491 cycle_A: 6.618 idt_A: 2.773 D_B: 1.166 G_B: 1.633 cycle_B: 2.775 idt_B: 1.616
(epoch: 1, iters: 76, time: 0.176, data: 0.145) D_A: 0.388 G_A: 0.643 cycle_A: 5.251 idt_A: 2.156 D_B: 0.918 G_B: 1.105 cycle_B: 2.187 idt_B: 1.284
(epoch: 1, iters: 80, time: 0.171, data: 0.145) D_A: 0.527 G_A: 0.786 cycle_A: 6.977 idt_A: 2.513 D_B: 0.720 G_B: 0.706 cycle_B: 2.706 idt_B: 1.781
(epoch: 1, iters: 84, time: 0.175, data: 0.145) D_A: 0.410 G_A: 0.708 cycle_A: 5.488 idt_A: 2.398 D_B: 0.400 G_B: 0.476 cycle_B: 2.578 idt_B: 1.421
(epoch: 1, iters: 88, time: 0.175, data: 0.145) D_A: 0.320 G_A: 0.617 cycle_A: 6.346 idt_A: 2.443 D_B: 0.528 G_B: 0.318 cycle_B: 2.565 idt_B: 1.628
(epoch: 1, iters: 92, time: 0.173, data: 0.145) D_A: 0.262 G_A: 0.546 cycle_A: 5.438 idt_A: 2.352 D_B: 0.471 G_B: 0.533 cycle_B: 2.245 idt_B: 1.221
(epoch: 1, iters: 96, time: 0.167, data: 0.145) D_A: 0.257 G_A: 0.494 cycle_A: 3.927 idt_A: 1.955 D_B: 0.405 G_B: 0.322 cycle_B: 1.907 idt_B: 0.925
(epoch: 1, iters: 100, time: 0.173, data: 0.145) D_A: 0.288 G_A: 0.535 cycle_A: 5.201 idt_A: 1.835 D_B: 0.381 G_B: 0.272 cycle_B: 2.043 idt_B: 1.275
(epoch: 1, iters: 100, time: 0.173, data: 0.145) D_A: 0.288 G_A: 0.535 cycle_A: 5.201 idt_A: 1.835 D_B: 0.381 G_B: 0.272 cycle_B: 2.043 idt_B: 1.275
(epoch: 1, iters: 104, time: 0.177, data: 0.002) D_A: 0.234 G_A: 0.453 cycle_A: 3.560 idt_A: 1.806 D_B: 0.408 G_B: 0.330 cycle_B: 1.827 idt_B: 0.865
(epoch: 1, iters: 108, time: 0.174, data: 0.002) D_A: 0.197 G_A: 0.553 cycle_A: 4.298 idt_A: 2.139 D_B: 0.326 G_B: 0.460 cycle_B: 2.311 idt_B: 1.060
(epoch: 1, iters: 112, time: 0.199, data: 0.002) D_A: 0.208 G_A: 0.516 cycle_A: 5.160 idt_A: 1.778 D_B: 0.318 G_B: 0.406 cycle_B: 2.006 idt_B: 1.235
(epoch: 1, iters: 116, time: 0.179, data: 0.002) D_A: 0.211 G_A: 0.409 cycle_A: 4.339 idt_A: 1.748 D_B: 0.273 G_B: 0.349 cycle_B: 1.875 idt_B: 1.100
(epoch: 1, iters: 120, time: 0.177, data: 0.002) D_A: 0.183 G_A: 0.465 cycle_A: 5.283 idt_A: 1.849 D_B: 0.394 G_B: 0.276 cycle_B: 1.860 idt_B: 1.372
(epoch: 1, iters: 124, time: 0.173, data: 0.002) D_A: 0.189 G_A: 0.392 cycle_A: 3.653 idt_A: 1.616 D_B: 0.313 G_B: 0.356 cycle_B: 1.683 idt_B: 0.939
(epoch: 1, iters: 128, time: 0.171, data: 0.002) D_A: 0.208 G_A: 0.362 cycle_A: 3.963 idt_A: 2.289 D_B: 0.327 G_B: 0.360 cycle_B: 2.442 idt_B: 0.949
(epoch: 1, iters: 132, time: 0.176, data: 0.002) D_A: 0.210 G_A: 0.544 cycle_A: 3.438 idt_A: 1.639 D_B: 0.335 G_B: 0.291 cycle_B: 1.674 idt_B: 0.850
(epoch: 1, iters: 136, time: 0.173, data: 0.002) D_A: 0.206 G_A: 0.408 cycle_A: 3.495 idt_A: 1.879 D_B: 0.305 G_B: 0.367 cycle_B: 1.796 idt_B: 0.837
(epoch: 1, iters: 140, time: 0.179, data: 0.002) D_A: 0.201 G_A: 0.360 cycle_A: 4.222 idt_A: 1.350 D_B: 0.278 G_B: 0.354 cycle_B: 1.530 idt_B: 0.964
(epoch: 1, iters: 144, time: 0.170, data: 0.002) D_A: 0.226 G_A: 0.478 cycle_A: 3.628 idt_A: 1.958 D_B: 0.283 G_B: 0.337 cycle_B: 1.905 idt_B: 0.912
(epoch: 1, iters: 148, time: 0.178, data: 0.002) D_A: 0.420 G_A: 0.443 cycle_A: 4.064 idt_A: 1.467 D_B: 0.269 G_B: 0.234 cycle_B: 1.786 idt_B: 1.043
(epoch: 1, iters: 152, time: 0.171, data: 0.002) D_A: 0.989 G_A: 1.546 cycle_A: 2.889 idt_A: 1.362 D_B: 0.272 G_B: 0.200 cycle_B: 1.353 idt_B: 0.783
(epoch: 1, iters: 156, time: 0.178, data: 0.002) D_A: 2.806 G_A: 3.170 cycle_A: 3.286 idt_A: 1.950 D_B: 0.266 G_B: 0.290 cycle_B: 2.033 idt_B: 0.763
(epoch: 1, iters: 160, time: 0.175, data: 0.002) D_A: 2.679 G_A: 2.894 cycle_A: 2.958 idt_A: 1.794 D_B: 0.306 G_B: 0.318 cycle_B: 1.966 idt_B: 0.738
(epoch: 1, iters: 164, time: 0.179, data: 0.002) D_A: 1.445 G_A: 1.302 cycle_A: 2.470 idt_A: 1.612 D_B: 0.264 G_B: 0.458 cycle_B: 1.754 idt_B: 0.654
(epoch: 1, iters: 168, time: 0.175, data: 0.002) D_A: 0.621 G_A: 0.888 cycle_A: 4.115 idt_A: 1.650 D_B: 0.348 G_B: 0.340 cycle_B: 1.708 idt_B: 0.836
(epoch: 1, iters: 172, time: 0.180, data: 0.002) D_A: 0.420 G_A: 0.556 cycle_A: 3.938 idt_A: 1.929 D_B: 0.280 G_B: 0.341 cycle_B: 1.870 idt_B: 0.994
(epoch: 1, iters: 176, time: 0.180, data: 0.002) D_A: 0.518 G_A: 0.583 cycle_A: 2.626 idt_A: 1.424 D_B: 0.298 G_B: 0.463 cycle_B: 1.431 idt_B: 0.657
(epoch: 1, iters: 180, time: 0.174, data: 0.002) D_A: 0.342 G_A: 0.662 cycle_A: 3.853 idt_A: 1.302 D_B: 0.363 G_B: 0.503 cycle_B: 1.451 idt_B: 0.948
(epoch: 1, iters: 184, time: 0.174, data: 0.002) D_A: 0.213 G_A: 0.373 cycle_A: 2.280 idt_A: 1.724 D_B: 0.532 G_B: 0.617 cycle_B: 2.022 idt_B: 0.594
(epoch: 1, iters: 188, time: 0.189, data: 0.002) D_A: 0.244 G_A: 0.319 cycle_A: 3.153 idt_A: 1.498 D_B: 1.114 G_B: 1.234 cycle_B: 1.602 idt_B: 0.744
(epoch: 1, iters: 192, time: 0.175, data: 0.002) D_A: 0.248 G_A: 0.321 cycle_A: 3.452 idt_A: 1.982 D_B: 1.508 G_B: 2.201 cycle_B: 1.900 idt_B: 0.800
(epoch: 1, iters: 196, time: 0.172, data: 0.002) D_A: 0.227 G_A: 0.375 cycle_A: 3.583 idt_A: 1.347 D_B: 0.570 G_B: 0.708 cycle_B: 1.472 idt_B: 0.847
(epoch: 1, iters: 200, time: 0.172, data: 0.002) D_A: 0.197 G_A: 0.457 cycle_A: 3.038 idt_A: 1.921 D_B: 0.311 G_B: 0.421 cycle_B: 2.191 idt_B: 0.724
(epoch: 1, iters: 200, time: 0.172, data: 0.002) D_A: 0.197 G_A: 0.457 cycle_A: 3.038 idt_A: 1.921 D_B: 0.311 G_B: 0.421 cycle_B: 2.191 idt_B: 0.724
(epoch: 1, iters: 204, time: 0.177, data: 0.002) D_A: 0.219 G_A: 0.417 cycle_A: 3.622 idt_A: 1.605 D_B: 0.397 G_B: 0.461 cycle_B: 1.681 idt_B: 0.928
(epoch: 1, iters: 208, time: 0.178, data: 0.002) D_A: 0.171 G_A: 0.431 cycle_A: 3.521 idt_A: 1.468 D_B: 0.406 G_B: 0.548 cycle_B: 1.716 idt_B: 0.938
(epoch: 1, iters: 212, time: 0.178, data: 0.002) D_A: 0.208 G_A: 0.355 cycle_A: 3.066 idt_A: 1.253 D_B: 0.341 G_B: 0.532 cycle_B: 1.391 idt_B: 0.835
(epoch: 1, iters: 216, time: 0.169, data: 0.002) D_A: 0.187 G_A: 0.378 cycle_A: 3.014 idt_A: 1.905 D_B: 0.269 G_B: 0.421 cycle_B: 1.866 idt_B: 0.740
(epoch: 1, iters: 220, time: 0.174, data: 0.002) D_A: 0.199 G_A: 0.363 cycle_A: 3.306 idt_A: 2.082 D_B: 0.227 G_B: 0.360 cycle_B: 2.010 idt_B: 0.812
(epoch: 1, iters: 224, time: 0.177, data: 0.002) D_A: 0.208 G_A: 0.407 cycle_A: 2.746 idt_A: 1.317 D_B: 0.241 G_B: 0.336 cycle_B: 1.388 idt_B: 0.613
(epoch: 1, iters: 228, time: 0.178, data: 0.002) D_A: 0.186 G_A: 0.379 cycle_A: 3.196 idt_A: 1.498 D_B: 0.263 G_B: 0.317 cycle_B: 1.631 idt_B: 0.745
(epoch: 1, iters: 232, time: 0.177, data: 0.002) D_A: 0.165 G_A: 0.426 cycle_A: 2.558 idt_A: 1.539 D_B: 0.214 G_B: 0.396 cycle_B: 1.696 idt_B: 0.574
(epoch: 1, iters: 236, time: 0.174, data: 0.002) D_A: 0.196 G_A: 0.457 cycle_A: 3.631 idt_A: 1.140 D_B: 0.251 G_B: 0.293 cycle_B: 1.176 idt_B: 0.879
(epoch: 1, iters: 240, time: 0.181, data: 0.002) D_A: 0.159 G_A: 0.496 cycle_A: 2.923 idt_A: 1.402 D_B: 0.216 G_B: 0.361 cycle_B: 1.866 idt_B: 0.753
(epoch: 1, iters: 244, time: 0.175, data: 0.002) D_A: 0.179 G_A: 0.388 cycle_A: 3.745 idt_A: 1.231 D_B: 0.258 G_B: 0.356 cycle_B: 1.335 idt_B: 0.997
(epoch: 1, iters: 248, time: 0.175, data: 0.002) D_A: 0.170 G_A: 0.433 cycle_A: 2.254 idt_A: 1.328 D_B: 0.239 G_B: 0.334 cycle_B: 1.372 idt_B: 0.633
(epoch: 1, iters: 252, time: 0.179, data: 0.002) D_A: 0.191 G_A: 0.467 cycle_A: 2.559 idt_A: 1.589 D_B: 0.198 G_B: 0.330 cycle_B: 1.543 idt_B: 0.535
(epoch: 1, iters: 256, time: 0.195, data: 0.002) D_A: 0.160 G_A: 0.431 cycle_A: 2.433 idt_A: 2.064 D_B: 0.231 G_B: 0.356 cycle_B: 1.970 idt_B: 0.574
(epoch: 1, iters: 260, time: 0.174, data: 0.002) D_A: 0.161 G_A: 0.474 cycle_A: 2.587 idt_A: 1.244 D_B: 0.211 G_B: 0.428 cycle_B: 1.179 idt_B: 0.642
(epoch: 1, iters: 264, time: 0.177, data: 0.002) D_A: 0.190 G_A: 0.548 cycle_A: 2.353 idt_A: 1.283 D_B: 0.255 G_B: 0.358 cycle_B: 1.411 idt_B: 0.566
(epoch: 1, iters: 268, time: 0.178, data: 0.002) D_A: 0.159 G_A: 0.425 cycle_A: 2.995 idt_A: 1.637 D_B: 0.232 G_B: 0.425 cycle_B: 1.790 idt_B: 0.701
(epoch: 1, iters: 272, time: 0.174, data: 0.002) D_A: 0.170 G_A: 0.368 cycle_A: 2.681 idt_A: 1.354 D_B: 0.234 G_B: 0.356 cycle_B: 1.581 idt_B: 0.661
(epoch: 1, iters: 276, time: 0.178, data: 0.002) D_A: 0.151 G_A: 0.434 cycle_A: 2.797 idt_A: 1.989 D_B: 0.215 G_B: 0.372 cycle_B: 2.146 idt_B: 0.599
(epoch: 1, iters: 280, time: 0.176, data: 0.002) D_A: 0.188 G_A: 0.622 cycle_A: 3.237 idt_A: 1.196 D_B: 0.197 G_B: 0.370 cycle_B: 1.190 idt_B: 0.885
(epoch: 1, iters: 284, time: 0.179, data: 0.002) D_A: 0.172 G_A: 0.513 cycle_A: 3.470 idt_A: 1.358 D_B: 0.225 G_B: 0.336 cycle_B: 1.400 idt_B: 0.747
(epoch: 1, iters: 288, time: 0.180, data: 0.002) D_A: 0.145 G_A: 0.421 cycle_A: 1.982 idt_A: 1.170 D_B: 0.199 G_B: 0.287 cycle_B: 1.318 idt_B: 0.517
(epoch: 1, iters: 292, time: 0.173, data: 0.002) D_A: 0.199 G_A: 0.381 cycle_A: 2.183 idt_A: 1.651 D_B: 0.213 G_B: 0.275 cycle_B: 1.635 idt_B: 0.617
(epoch: 1, iters: 296, time: 0.179, data: 0.002) D_A: 0.185 G_A: 0.417 cycle_A: 3.143 idt_A: 1.508 D_B: 0.256 G_B: 0.419 cycle_B: 1.482 idt_B: 0.654
(epoch: 1, iters: 300, time: 0.179, data: 0.002) D_A: 0.138 G_A: 0.445 cycle_A: 3.832 idt_A: 1.042 D_B: 0.235 G_B: 0.437 cycle_B: 1.074 idt_B: 1.024
(epoch: 1, iters: 300, time: 0.179, data: 0.002) D_A: 0.138 G_A: 0.445 cycle_A: 3.832 idt_A: 1.042 D_B: 0.235 G_B: 0.437 cycle_B: 1.074 idt_B: 1.024
(epoch: 1, iters: 304, time: 0.180, data: 0.003) D_A: 0.186 G_A: 0.415 cycle_A: 1.829 idt_A: 2.191 D_B: 0.220 G_B: 0.410 cycle_B: 2.060 idt_B: 0.478
(epoch: 1, iters: 308, time: 0.189, data: 0.003) D_A: 0.220 G_A: 0.420 cycle_A: 3.195 idt_A: 1.165 D_B: 0.212 G_B: 0.345 cycle_B: 1.231 idt_B: 0.677
(epoch: 1, iters: 312, time: 0.183, data: 0.003) D_A: 0.180 G_A: 0.507 cycle_A: 2.676 idt_A: 1.211 D_B: 0.290 G_B: 0.237 cycle_B: 1.489 idt_B: 0.620
(epoch: 1, iters: 316, time: 0.182, data: 0.003) D_A: 0.179 G_A: 0.342 cycle_A: 3.032 idt_A: 1.786 D_B: 0.225 G_B: 0.367 cycle_B: 1.669 idt_B: 0.631
(epoch: 1, iters: 320, time: 0.184, data: 0.003) D_A: 0.119 G_A: 0.488 cycle_A: 2.273 idt_A: 1.306 D_B: 0.281 G_B: 0.448 cycle_B: 1.357 idt_B: 0.543
(epoch: 1, iters: 324, time: 0.199, data: 0.003) D_A: 0.169 G_A: 0.491 cycle_A: 3.112 idt_A: 1.072 D_B: 0.288 G_B: 0.475 cycle_B: 1.425 idt_B: 0.823
(epoch: 1, iters: 328, time: 0.174, data: 0.003) D_A: 0.190 G_A: 0.333 cycle_A: 2.264 idt_A: 0.901 D_B: 0.287 G_B: 0.455 cycle_B: 0.935 idt_B: 0.589
(epoch: 1, iters: 332, time: 0.183, data: 0.003) D_A: 0.233 G_A: 0.368 cycle_A: 4.044 idt_A: 1.293 D_B: 0.369 G_B: 0.509 cycle_B: 1.384 idt_B: 1.087
(epoch: 1, iters: 336, time: 0.173, data: 0.003) D_A: 0.195 G_A: 0.320 cycle_A: 2.579 idt_A: 1.073 D_B: 0.544 G_B: 0.646 cycle_B: 1.067 idt_B: 0.598
(epoch: 1, iters: 340, time: 0.179, data: 0.003) D_A: 0.184 G_A: 0.336 cycle_A: 2.851 idt_A: 2.320 D_B: 0.391 G_B: 0.515 cycle_B: 2.302 idt_B: 0.737
(epoch: 1, iters: 344, time: 0.177, data: 0.003) D_A: 0.218 G_A: 0.599 cycle_A: 3.520 idt_A: 1.138 D_B: 0.277 G_B: 0.419 cycle_B: 1.386 idt_B: 0.891
(epoch: 1, iters: 348, time: 0.176, data: 0.003) D_A: 0.251 G_A: 0.305 cycle_A: 3.078 idt_A: 0.894 D_B: 0.258 G_B: 0.409 cycle_B: 1.055 idt_B: 0.630
(epoch: 1, iters: 352, time: 0.176, data: 0.003) D_A: 0.266 G_A: 0.442 cycle_A: 3.376 idt_A: 1.059 D_B: 0.274 G_B: 0.407 cycle_B: 1.204 idt_B: 0.709
(epoch: 1, iters: 356, time: 0.175, data: 0.003) D_A: 0.266 G_A: 0.439 cycle_A: 2.728 idt_A: 1.044 D_B: 0.195 G_B: 0.383 cycle_B: 1.164 idt_B: 0.644
(epoch: 1, iters: 360, time: 0.175, data: 0.003) D_A: 0.223 G_A: 0.420 cycle_A: 4.291 idt_A: 1.191 D_B: 0.199 G_B: 0.338 cycle_B: 1.215 idt_B: 1.088
(epoch: 1, iters: 364, time: 0.179, data: 0.003) D_A: 0.219 G_A: 0.492 cycle_A: 2.506 idt_A: 1.062 D_B: 0.194 G_B: 0.371 cycle_B: 0.994 idt_B: 0.639
(epoch: 1, iters: 368, time: 0.177, data: 0.003) D_A: 0.204 G_A: 0.405 cycle_A: 3.106 idt_A: 1.113 D_B: 0.261 G_B: 0.439 cycle_B: 1.215 idt_B: 0.720
(epoch: 1, iters: 372, time: 0.178, data: 0.003) D_A: 0.170 G_A: 0.338 cycle_A: 3.199 idt_A: 0.948 D_B: 0.179 G_B: 0.410 cycle_B: 1.262 idt_B: 0.786
(epoch: 1, iters: 376, time: 0.175, data: 0.003) D_A: 0.260 G_A: 0.358 cycle_A: 1.931 idt_A: 1.294 D_B: 0.250 G_B: 0.284 cycle_B: 1.253 idt_B: 0.430
(epoch: 1, iters: 380, time: 0.175, data: 0.003) D_A: 0.204 G_A: 0.579 cycle_A: 1.586 idt_A: 1.090 D_B: 0.248 G_B: 0.332 cycle_B: 1.046 idt_B: 0.420
(epoch: 1, iters: 384, time: 0.178, data: 0.003) D_A: 0.198 G_A: 0.411 cycle_A: 4.933 idt_A: 1.042 D_B: 0.216 G_B: 0.511 cycle_B: 1.006 idt_B: 1.169
(epoch: 1, iters: 388, time: 0.176, data: 0.003) D_A: 0.224 G_A: 0.393 cycle_A: 3.395 idt_A: 0.933 D_B: 0.216 G_B: 0.442 cycle_B: 1.192 idt_B: 0.770
(epoch: 1, iters: 392, time: 0.173, data: 0.003) D_A: 0.192 G_A: 0.423 cycle_A: 2.735 idt_A: 1.151 D_B: 0.293 G_B: 0.498 cycle_B: 1.328 idt_B: 0.630
(epoch: 1, iters: 396, time: 0.177, data: 0.003) D_A: 0.244 G_A: 0.223 cycle_A: 2.171 idt_A: 1.205 D_B: 0.182 G_B: 0.378 cycle_B: 1.133 idt_B: 0.644
(epoch: 1, iters: 400, time: 0.597, data: 0.003) D_A: 0.190 G_A: 0.331 cycle_A: 4.799 idt_A: 0.917 D_B: 0.196 G_B: 0.332 cycle_B: 1.032 idt_B: 1.134
(epoch: 1, iters: 400, time: 0.597, data: 0.003) D_A: 0.190 G_A: 0.331 cycle_A: 4.799 idt_A: 0.917 D_B: 0.196 G_B: 0.332 cycle_B: 1.032 idt_B: 1.134
(epoch: 1, iters: 404, time: 0.205, data: 0.002) D_A: 0.115 G_A: 0.324 cycle_A: 1.936 idt_A: 1.051 D_B: 0.200 G_B: 0.338 cycle_B: 1.078 idt_B: 0.510
(epoch: 1, iters: 408, time: 0.190, data: 0.002) D_A: 0.244 G_A: 0.408 cycle_A: 2.401 idt_A: 1.000 D_B: 0.200 G_B: 0.368 cycle_B: 1.084 idt_B: 0.532
(epoch: 1, iters: 412, time: 0.185, data: 0.002) D_A: 0.249 G_A: 0.509 cycle_A: 2.594 idt_A: 0.951 D_B: 0.203 G_B: 0.267 cycle_B: 1.202 idt_B: 0.666
(epoch: 1, iters: 416, time: 0.177, data: 0.002) D_A: 0.285 G_A: 0.324 cycle_A: 2.622 idt_A: 1.179 D_B: 0.230 G_B: 0.361 cycle_B: 1.312 idt_B: 0.633
(epoch: 1, iters: 420, time: 0.179, data: 0.002) D_A: 0.269 G_A: 0.276 cycle_A: 4.187 idt_A: 0.791 D_B: 0.197 G_B: 0.410 cycle_B: 0.914 idt_B: 1.084
(epoch: 1, iters: 424, time: 0.181, data: 0.002) D_A: 0.226 G_A: 0.293 cycle_A: 4.291 idt_A: 1.105 D_B: 0.238 G_B: 0.489 cycle_B: 1.276 idt_B: 1.084
(epoch: 1, iters: 428, time: 0.187, data: 0.002) D_A: 0.195 G_A: 0.541 cycle_A: 2.808 idt_A: 0.951 D_B: 0.233 G_B: 0.408 cycle_B: 1.009 idt_B: 0.595
(epoch: 1, iters: 432, time: 0.181, data: 0.002) D_A: 0.229 G_A: 0.300 cycle_A: 3.241 idt_A: 0.927 D_B: 0.290 G_B: 0.533 cycle_B: 0.937 idt_B: 0.724
(epoch: 1, iters: 436, time: 0.185, data: 0.002) D_A: 0.203 G_A: 0.576 cycle_A: 2.994 idt_A: 1.514 D_B: 0.355 G_B: 0.583 cycle_B: 1.927 idt_B: 0.698
(epoch: 1, iters: 440, time: 0.178, data: 0.002) D_A: 0.247 G_A: 0.416 cycle_A: 2.749 idt_A: 0.817 D_B: 0.336 G_B: 0.659 cycle_B: 1.032 idt_B: 0.660
(epoch: 1, iters: 444, time: 0.176, data: 0.002) D_A: 0.282 G_A: 0.374 cycle_A: 3.343 idt_A: 1.374 D_B: 0.347 G_B: 0.548 cycle_B: 1.503 idt_B: 0.630
(epoch: 1, iters: 448, time: 0.173, data: 0.002) D_A: 0.271 G_A: 0.591 cycle_A: 2.266 idt_A: 1.290 D_B: 0.350 G_B: 0.474 cycle_B: 1.789 idt_B: 0.551
(epoch: 1, iters: 452, time: 0.178, data: 0.002) D_A: 0.241 G_A: 0.446 cycle_A: 2.193 idt_A: 1.058 D_B: 0.283 G_B: 0.415 cycle_B: 1.338 idt_B: 0.532
(epoch: 1, iters: 456, time: 0.181, data: 0.002) D_A: 0.241 G_A: 0.460 cycle_A: 2.153 idt_A: 1.448 D_B: 0.224 G_B: 0.443 cycle_B: 1.639 idt_B: 0.550
(epoch: 1, iters: 460, time: 0.178, data: 0.002) D_A: 0.292 G_A: 0.429 cycle_A: 2.309 idt_A: 1.290 D_B: 0.233 G_B: 0.514 cycle_B: 1.328 idt_B: 0.702
(epoch: 1, iters: 464, time: 0.179, data: 0.002) D_A: 0.281 G_A: 0.441 cycle_A: 1.833 idt_A: 1.414 D_B: 0.224 G_B: 0.478 cycle_B: 1.267 idt_B: 0.590
(epoch: 1, iters: 468, time: 0.177, data: 0.002) D_A: 0.313 G_A: 0.544 cycle_A: 2.480 idt_A: 1.557 D_B: 0.217 G_B: 0.355 cycle_B: 1.449 idt_B: 0.437
(epoch: 1, iters: 472, time: 0.170, data: 0.002) D_A: 0.318 G_A: 0.420 cycle_A: 2.007 idt_A: 1.243 D_B: 0.158 G_B: 0.411 cycle_B: 1.560 idt_B: 0.513
(epoch: 1, iters: 476, time: 0.192, data: 0.002) D_A: 0.310 G_A: 0.526 cycle_A: 2.960 idt_A: 0.995 D_B: 0.203 G_B: 0.350 cycle_B: 1.197 idt_B: 0.758
(epoch: 1, iters: 480, time: 0.186, data: 0.002) D_A: 0.300 G_A: 0.406 cycle_A: 2.000 idt_A: 0.974 D_B: 0.218 G_B: 0.436 cycle_B: 1.090 idt_B: 0.458
(epoch: 1, iters: 484, time: 0.196, data: 0.002) D_A: 0.297 G_A: 0.360 cycle_A: 2.708 idt_A: 1.316 D_B: 0.253 G_B: 0.377 cycle_B: 1.355 idt_B: 0.484
(epoch: 1, iters: 488, time: 0.181, data: 0.002) D_A: 0.233 G_A: 0.335 cycle_A: 1.811 idt_A: 1.607 D_B: 0.222 G_B: 0.316 cycle_B: 1.526 idt_B: 0.401
(epoch: 1, iters: 492, time: 0.181, data: 0.002) D_A: 0.217 G_A: 0.332 cycle_A: 3.901 idt_A: 1.096 D_B: 0.227 G_B: 0.362 cycle_B: 1.639 idt_B: 0.972
(epoch: 1, iters: 496, time: 0.176, data: 0.002) D_A: 0.250 G_A: 0.344 cycle_A: 5.773 idt_A: 1.553 D_B: 0.193 G_B: 0.314 cycle_B: 1.383 idt_B: 1.486
(epoch: 1, iters: 500, time: 0.173, data: 0.002) D_A: 0.199 G_A: 0.396 cycle_A: 2.772 idt_A: 0.947 D_B: 0.209 G_B: 0.546 cycle_B: 1.393 idt_B: 0.757
(epoch: 1, iters: 500, time: 0.173, data: 0.002) D_A: 0.199 G_A: 0.396 cycle_A: 2.772 idt_A: 0.947 D_B: 0.209 G_B: 0.546 cycle_B: 1.393 idt_B: 0.757
(epoch: 1, iters: 504, time: 0.180, data: 0.002) D_A: 0.199 G_A: 0.465 cycle_A: 3.514 idt_A: 1.180 D_B: 0.230 G_B: 0.537 cycle_B: 1.324 idt_B: 0.699
(epoch: 1, iters: 508, time: 0.184, data: 0.002) D_A: 0.182 G_A: 0.419 cycle_A: 1.617 idt_A: 1.063 D_B: 0.218 G_B: 0.325 cycle_B: 1.036 idt_B: 0.465
(epoch: 1, iters: 512, time: 0.180, data: 0.002) D_A: 0.188 G_A: 0.427 cycle_A: 2.063 idt_A: 0.733 D_B: 0.301 G_B: 0.255 cycle_B: 1.158 idt_B: 0.572
(epoch: 1, iters: 516, time: 0.184, data: 0.002) D_A: 0.156 G_A: 0.391 cycle_A: 4.046 idt_A: 1.400 D_B: 0.206 G_B: 0.384 cycle_B: 1.326 idt_B: 1.032
(epoch: 1, iters: 520, time: 0.184, data: 0.002) D_A: 0.239 G_A: 0.325 cycle_A: 2.589 idt_A: 0.933 D_B: 0.199 G_B: 0.496 cycle_B: 1.002 idt_B: 0.552
(epoch: 1, iters: 524, time: 0.187, data: 0.002) D_A: 0.200 G_A: 0.462 cycle_A: 1.946 idt_A: 1.135 D_B: 0.233 G_B: 0.437 cycle_B: 1.230 idt_B: 0.414
(epoch: 1, iters: 528, time: 0.180, data: 0.002) D_A: 0.180 G_A: 0.487 cycle_A: 2.013 idt_A: 0.741 D_B: 0.233 G_B: 0.444 cycle_B: 0.896 idt_B: 0.444
(epoch: 1, iters: 532, time: 0.177, data: 0.002) D_A: 0.144 G_A: 0.327 cycle_A: 2.094 idt_A: 1.235 D_B: 0.249 G_B: 0.449 cycle_B: 1.304 idt_B: 0.508
(epoch: 1, iters: 536, time: 0.180, data: 0.002) D_A: 0.208 G_A: 0.402 cycle_A: 2.118 idt_A: 0.913 D_B: 0.215 G_B: 0.449 cycle_B: 1.300 idt_B: 0.516
(epoch: 1, iters: 540, time: 0.179, data: 0.002) D_A: 0.190 G_A: 0.508 cycle_A: 2.446 idt_A: 0.944 D_B: 0.212 G_B: 0.379 cycle_B: 0.969 idt_B: 0.693
(epoch: 1, iters: 544, time: 0.181, data: 0.002) D_A: 0.196 G_A: 0.355 cycle_A: 2.868 idt_A: 1.534 D_B: 0.212 G_B: 0.418 cycle_B: 1.449 idt_B: 0.669
(epoch: 1, iters: 548, time: 0.180, data: 0.002) D_A: 0.224 G_A: 0.408 cycle_A: 2.495 idt_A: 1.008 D_B: 0.222 G_B: 0.431 cycle_B: 0.934 idt_B: 0.496
(epoch: 1, iters: 552, time: 0.177, data: 0.002) D_A: 0.180 G_A: 0.463 cycle_A: 7.408 idt_A: 1.157 D_B: 0.200 G_B: 0.429 cycle_B: 1.497 idt_B: 1.781
(epoch: 1, iters: 556, time: 0.189, data: 0.002) D_A: 0.184 G_A: 0.297 cycle_A: 2.254 idt_A: 0.962 D_B: 0.219 G_B: 0.486 cycle_B: 1.037 idt_B: 0.507
(epoch: 1, iters: 560, time: 0.173, data: 0.002) D_A: 0.172 G_A: 0.393 cycle_A: 2.112 idt_A: 1.101 D_B: 0.173 G_B: 0.297 cycle_B: 1.197 idt_B: 0.572
(epoch: 1, iters: 564, time: 0.182, data: 0.002) D_A: 0.175 G_A: 0.425 cycle_A: 2.890 idt_A: 0.805 D_B: 0.189 G_B: 0.401 cycle_B: 1.111 idt_B: 0.820
(epoch: 1, iters: 568, time: 0.207, data: 0.002) D_A: 0.255 G_A: 0.282 cycle_A: 3.253 idt_A: 1.323 D_B: 0.228 G_B: 0.485 cycle_B: 1.384 idt_B: 0.644
(epoch: 1, iters: 572, time: 0.189, data: 0.002) D_A: 0.257 G_A: 0.497 cycle_A: 2.793 idt_A: 1.535 D_B: 0.260 G_B: 0.390 cycle_B: 1.647 idt_B: 0.465
(epoch: 1, iters: 576, time: 0.178, data: 0.002) D_A: 0.200 G_A: 0.362 cycle_A: 2.051 idt_A: 0.995 D_B: 0.290 G_B: 0.417 cycle_B: 1.328 idt_B: 0.463
(epoch: 1, iters: 580, time: 0.178, data: 0.002) D_A: 0.235 G_A: 0.235 cycle_A: 2.634 idt_A: 1.036 D_B: 0.282 G_B: 0.499 cycle_B: 1.251 idt_B: 0.606
(epoch: 1, iters: 584, time: 0.183, data: 0.002) D_A: 0.255 G_A: 0.512 cycle_A: 2.222 idt_A: 0.918 D_B: 0.422 G_B: 0.534 cycle_B: 1.110 idt_B: 0.612
(epoch: 1, iters: 588, time: 0.178, data: 0.002) D_A: 0.209 G_A: 0.468 cycle_A: 3.433 idt_A: 1.002 D_B: 0.456 G_B: 0.775 cycle_B: 1.177 idt_B: 0.985
(epoch: 1, iters: 592, time: 0.170, data: 0.002) D_A: 0.285 G_A: 0.381 cycle_A: 2.053 idt_A: 1.409 D_B: 0.631 G_B: 0.759 cycle_B: 1.366 idt_B: 0.476
(epoch: 1, iters: 596, time: 0.178, data: 0.002) D_A: 0.256 G_A: 0.421 cycle_A: 2.481 idt_A: 1.035 D_B: 0.727 G_B: 0.885 cycle_B: 1.564 idt_B: 0.520
(epoch: 1, iters: 600, time: 0.174, data: 0.002) D_A: 0.222 G_A: 0.415 cycle_A: 2.278 idt_A: 1.064 D_B: 0.771 G_B: 0.965 cycle_B: 1.305 idt_B: 0.477
(epoch: 1, iters: 600, time: 0.174, data: 0.002) D_A: 0.222 G_A: 0.415 cycle_A: 2.278 idt_A: 1.064 D_B: 0.771 G_B: 0.965 cycle_B: 1.305 idt_B: 0.477
[val] (epoch: 1 , iter:  0 )
[val] (epoch: 1 , iter:  1 )
[val] (epoch: 1 , iter:  2 )
[val] (epoch: 1 , iter:  3 )
[val] (epoch: 1 , iter:  4 )
[val] (epoch: 1 , iter:  5 )
Traceback (most recent call last):
  File "train.py", line 162, in <module>
    iter_current_val_loss_G.append(model.forward_val_get_loss())# val loss가져오기
  File "/home/guest1/ellen_code/pytorch-CycleGAN-and-pix2pix_ellen/models/cycle_gan_model.py", line 125, in forward_val_get_loss
    self.rec_A = self.netG_B(self.fake_B)   # G_B(G_A(A))
  File "/home/guest1/.conda/envs/ellen/lib/python3.7/site-packages/torch/nn/modules/module.py", line 1102, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/guest1/.conda/envs/ellen/lib/python3.7/site-packages/torch/nn/parallel/data_parallel.py", line 168, in forward
    outputs = self.parallel_apply(replicas, inputs, kwargs)
  File "/home/guest1/.conda/envs/ellen/lib/python3.7/site-packages/torch/nn/parallel/data_parallel.py", line 178, in parallel_apply
    return parallel_apply(replicas, inputs, kwargs, self.device_ids[:len(replicas)])
  File "/home/guest1/.conda/envs/ellen/lib/python3.7/site-packages/torch/nn/parallel/parallel_apply.py", line 86, in parallel_apply
    output.reraise()
  File "/home/guest1/.conda/envs/ellen/lib/python3.7/site-packages/torch/_utils.py", line 434, in reraise
    raise exception
RuntimeError: Caught RuntimeError in replica 0 on device 0.
Original Traceback (most recent call last):
  File "/home/guest1/.conda/envs/ellen/lib/python3.7/site-packages/torch/nn/parallel/parallel_apply.py", line 61, in _worker
    output = module(*input, **kwargs)
  File "/home/guest1/.conda/envs/ellen/lib/python3.7/site-packages/torch/nn/modules/module.py", line 1102, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/guest1/ellen_code/pytorch-CycleGAN-and-pix2pix_ellen/models/networks.py", line 1337, in forward
    result_scattering = self.scattering_model(input)
  File "/home/guest1/.conda/envs/ellen/lib/python3.7/site-packages/torch/nn/modules/module.py", line 1102, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/guest1/ellen_code/pytorch-CycleGAN-and-pix2pix_ellen/models/networks.py", line 1165, in forward
    scattering1 = self.scattering_down_1(x)
  File "/home/guest1/.conda/envs/ellen/lib/python3.7/site-packages/torch/nn/modules/module.py", line 1102, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/guest1/ellen_code/pytorch-CycleGAN-and-pix2pix_ellen/models/networks.py", line 1082, in forward
    scatter_ouput = self.Scattering.scattering(x)
  File "/home/guest1/.conda/envs/ellen/lib/python3.7/site-packages/kymatio/scattering2d/frontend/torch_frontend.py", line 99, in scattering
    self.L, phi, psi, self.max_order, self.out_type)
  File "/home/guest1/.conda/envs/ellen/lib/python3.7/site-packages/kymatio/scattering2d/core/scattering2d.py", line 16, in scattering2d
    U_0_c = rfft(U_r)
  File "/home/guest1/.conda/envs/ellen/lib/python3.7/site-packages/kymatio/scattering2d/backend/torch_backend.py", line 141, in rfft
    return _fft(x_r)
  File "/home/guest1/.conda/envs/ellen/lib/python3.7/site-packages/kymatio/scattering2d/backend/torch_backend.py", line 10, in <lambda>
    _fft = lambda x: torch.view_as_real(torch.fft.fft2(torch.view_as_complex(x)))
RuntimeError: CUDA out of memory. Tried to allocate 20.00 MiB (GPU 0; 11.91 GiB total capacity; 11.06 GiB already allocated; 3.00 MiB free; 11.10 GiB reserved in total by PyTorch) If reserved memory is >> allocated memory try setting max_split_size_mb to avoid fragmentation.  See documentation for Memory Management and PYTORCH_CUDA_ALLOC_CONF