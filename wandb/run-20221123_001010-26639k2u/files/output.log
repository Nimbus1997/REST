create web directory ./checkpoints/ellen_dwt_uresnet1_1_test0/web...
learning rate 0.0002000 -> 0.0002000
/home/guest1/.conda/envs/ellen/lib/python3.7/site-packages/torch/optim/lr_scheduler.py:134: UserWarning: Detected call of `lr_scheduler.step()` before `optimizer.step()`. In PyTorch 1.1.0 and later, you should call them in the opposite order: `optimizer.step()` before `lr_scheduler.step()`.  Failure to do this will result in PyTorch skipping the first value of the learning rate schedule. See more details at https://pytorch.org/docs/stable/optim.html#how-to-adjust-learning-rate
  "https://pytorch.org/docs/stable/optim.html#how-to-adjust-learning-rate", UserWarning)
> /home/guest1/ellen_code/pytorch-CycleGAN-and-pix2pix_ellen/models/cycle_gan_model.py(197)optimize_parameters()
-> self.set_requires_grad([self.netD_A, self.netD_B], True)







[?2004h(Pdb) self.netG_A
DataParallel(
  (module): ellen_dwt_uresnet1_1(
    (model): Sequential(
      (0): UnetSkipConnectionBlock(
        (model): Sequential(
          (0): Conv2d(3, 64, kernel_size=(4, 4), stride=(2, 2), padding=(1, 1))
          (1): UnetSkipConnectionBlock(
            (model): Sequential(
              (0): LeakyReLU(negative_slope=0.2, inplace=True)
              (1): Conv2d(64, 128, kernel_size=(4, 4), stride=(2, 2), padding=(1, 1))
              (2): InstanceNorm2d(128, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)
              (3): UnetSkipConnectionBlock(
                (model): Sequential(
                  (0): LeakyReLU(negative_slope=0.2, inplace=True)
                  (1): Conv2d(128, 128, kernel_size=(4, 4), stride=(2, 2), padding=(1, 1))
                  (2): ReLU(inplace=True)
                  (3): ConvTranspose2d(128, 128, kernel_size=(4, 4), stride=(2, 2), padding=(1, 1))
                  (4): InstanceNorm2d(128, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)
                )
              )
              (4): ReLU(inplace=True)
              (5): ConvTranspose2d(256, 64, kernel_size=(4, 4), stride=(2, 2), padding=(1, 1))
              (6): InstanceNorm2d(64, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)
            )
          )
          (2): ReLU(inplace=True)
          (3): ConvTranspose2d(128, 3, kernel_size=(4, 4), stride=(2, 2), padding=(1, 1))
          (4): Tanh()
        )
      )
    )
    (channel9to3): Sequential(
      (0): Conv2d(9, 3, kernel_size=(1, 1), stride=(1, 1))
      (1): LeakyReLU(negative_slope=0.2)
    )
    (channel6to3nsizeUp): Sequential(
      (0): ConvTranspose2d(6, 3, kernel_size=(4, 4), stride=(2, 2), padding=(1, 1))
      (1): Tanh()
    )
    (dwt): DWT()
  )
)













[?2004h(Pdb) self.netG_A.module.get_parameter('model.0.model.0.weight')[0]
tensor([[[ 0.0037,  0.0430, -0.0036,  0.0168],
         [-0.0387,  0.0129, -0.0132, -0.0166],
         [ 0.0104, -0.0257, -0.0334, -0.0063],
         [-0.0021,  0.0038, -0.0226,  0.0370]],
        [[-0.0145,  0.0136,  0.0157, -0.0009],
         [ 0.0296, -0.0105, -0.0053,  0.0293],
         [-0.0067, -0.0234,  0.0469, -0.0140],
         [ 0.0035, -0.0239, -0.0363, -0.0318]],
        [[ 0.0166,  0.0282,  0.0127,  0.0083],
         [-0.0320,  0.0122,  0.0336, -0.0135],
         [ 0.0187,  0.0014,  0.0015, -0.0030],
         [ 0.0064, -0.0120, -0.0216,  0.0017]]], device='cuda:1',
       grad_fn=<SelectBackward0>)

--KeyboardInterrupt--
--KeyboardInterrupt--
--KeyboardInterrupt--
[?2004h(Pdb)
tensor([[[ 0.0037,  0.0430, -0.0036,  0.0168],
         [-0.0387,  0.0129, -0.0132, -0.0166],
         [ 0.0104, -0.0257, -0.0334, -0.0063],
         [-0.0021,  0.0038, -0.0226,  0.0370]],
        [[-0.0145,  0.0136,  0.0157, -0.0009],
         [ 0.0296, -0.0105, -0.0053,  0.0293],
         [-0.0067, -0.0234,  0.0469, -0.0140],
         [ 0.0035, -0.0239, -0.0363, -0.0318]],
        [[ 0.0166,  0.0282,  0.0127,  0.0083],
         [-0.0320,  0.0122,  0.0336, -0.0135],
         [ 0.0187,  0.0014,  0.0015, -0.0030],
         [ 0.0064, -0.0120, -0.0216,  0.0017]]], device='cuda:1',
       grad_fn=<SelectBackward0>)
[?2004h(Pdb)
tensor([[[ 0.0037,  0.0430, -0.0036,  0.0168],
         [-0.0387,  0.0129, -0.0132, -0.0166],
         [ 0.0104, -0.0257, -0.0334, -0.0063],
         [-0.0021,  0.0038, -0.0226,  0.0370]],
        [[-0.0145,  0.0136,  0.0157, -0.0009],
         [ 0.0296, -0.0105, -0.0053,  0.0293],
         [-0.0067, -0.0234,  0.0469, -0.0140],
         [ 0.0035, -0.0239, -0.0363, -0.0318]],
        [[ 0.0166,  0.0282,  0.0127,  0.0083],
         [-0.0320,  0.0122,  0.0336, -0.0135],
         [ 0.0187,  0.0014,  0.0015, -0.0030],
         [ 0.0064, -0.0120, -0.0216,  0.0017]]], device='cuda:1',
       grad_fn=<SelectBackward0>)
[?2004h(Pdb)
Exception in thread NetStatThr:
Traceback (most recent call last):
  File "/home/guest1/.conda/envs/ellen/lib/python3.7/threading.py", line 926, in _bootstrap_inner
    self.run()
  File "/home/guest1/.conda/envs/ellen/lib/python3.7/threading.py", line 870, in run
    self._target(*self._args, **self._kwargs)
  File "/home/guest1/.conda/envs/ellen/lib/python3.7/site-packages/wandb/sdk/wandb_run.py", line 152, in check_network_status
    status_response = self._interface.communicate_network_status()
  File "/home/guest1/.conda/envs/ellen/lib/python3.7/site-packages/wandb/sdk/interface/interface.py", line 125, in communicate_network_status
    resp = self._communicate_network_status(status)
  File "/home/guest1/.conda/envs/ellen/lib/python3.7/site-packages/wandb/sdk/interface/interface_shared.py", line 388, in _communicate_network_status
    resp = self._communicate(req, local=True)
  File "/home/guest1/.conda/envs/ellen/lib/python3.7/site-packages/wandb/sdk/interface/interface_shared.py", line 213, in _communicate
    return self._communicate_async(rec, local=local).get(timeout=timeout)
  File "/home/guest1/.conda/envs/ellen/lib/python3.7/site-packages/wandb/sdk/interface/interface_shared.py", line 218, in _communicate_async
    raise Exception("The wandb backend process has shutdown")

[?2004h(Pdb) [?2004l
Traceback (most recent call last):
  File "train.py", line 126, in <module>
    model.optimize_parameters()
  File "/home/guest1/ellen_code/pytorch-CycleGAN-and-pix2pix_ellen/models/cycle_gan_model.py", line 197, in optimize_parameters
    self.set_requires_grad([self.netD_A, self.netD_B], True)
  File "/home/guest1/ellen_code/pytorch-CycleGAN-and-pix2pix_ellen/models/cycle_gan_model.py", line 197, in optimize_parameters
    self.set_requires_grad([self.netD_A, self.netD_B], True)
  File "/home/guest1/.conda/envs/ellen/lib/python3.7/bdb.py", line 88, in trace_dispatch
    return self.dispatch_line(frame)
  File "/home/guest1/.conda/envs/ellen/lib/python3.7/bdb.py", line 113, in dispatch_line
    if self.quitting: raise BdbQuit
bdb.BdbQuit