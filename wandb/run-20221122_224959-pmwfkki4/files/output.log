create web directory ./checkpoints/ellen_scatteing_test1/web...
learning rate 0.0002000 -> 0.0002000
[ellen]------------------------
[ 0 ], data_A_paths :  ['/home/guest1/ellen_data/UKB_quality_data2_combined/input_20220623_512_n1000/trainA/0335.jpg', '/home/guest1/ellen_data/UKB_quality_data2_combined/input_20220623_512_n1000/trainA/0353.jpg', '/home/guest1/ellen_data/UKB_quality_data2_combined/input_20220623_512_n1000/trainA/0474.jpg', '/home/guest1/ellen_data/UKB_quality_data2_combined/input_20220623_512_n1000/trainA/0499.jpg']
/home/guest1/.conda/envs/ellen/lib/python3.7/site-packages/torch/optim/lr_scheduler.py:134: UserWarning: Detected call of `lr_scheduler.step()` before `optimizer.step()`. In PyTorch 1.1.0 and later, you should call them in the opposite order: `optimizer.step()` before `lr_scheduler.step()`.  Failure to do this will result in PyTorch skipping the first value of the learning rate schedule. See more details at https://pytorch.org/docs/stable/optim.html#how-to-adjust-learning-rate
  "https://pytorch.org/docs/stable/optim.html#how-to-adjust-learning-rate", UserWarning)
/home/guest1/.conda/envs/ellen/lib/python3.7/site-packages/torch/nn/functional.py:3635: UserWarning: Default upsampling behavior when mode=bilinear is changed to align_corners=False since 0.4.0. Please specify align_corners=True if the old behavior is desired. See the documentation of nn.Upsample for details.
  "See the documentation of nn.Upsample for details.".format(mode)
Traceback (most recent call last):
  File "train.py", line 121, in <module>
    model.optimize_parameters()
  File "/home/guest1/ellen_code/pytorch-CycleGAN-and-pix2pix_ellen/models/cycle_gan_model.py", line 184, in optimize_parameters
    self.forward()      # compute fake images and reconstruction images.
  File "/home/guest1/ellen_code/pytorch-CycleGAN-and-pix2pix_ellen/models/cycle_gan_model.py", line 116, in forward
    self.rec_A = self.netG_B(self.fake_B)   # G_B(G_A(A))
  File "/home/guest1/.conda/envs/ellen/lib/python3.7/site-packages/torch/nn/modules/module.py", line 1102, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/guest1/.conda/envs/ellen/lib/python3.7/site-packages/torch/nn/parallel/data_parallel.py", line 168, in forward
    outputs = self.parallel_apply(replicas, inputs, kwargs)
  File "/home/guest1/.conda/envs/ellen/lib/python3.7/site-packages/torch/nn/parallel/data_parallel.py", line 178, in parallel_apply
    return parallel_apply(replicas, inputs, kwargs, self.device_ids[:len(replicas)])
  File "/home/guest1/.conda/envs/ellen/lib/python3.7/site-packages/torch/nn/parallel/parallel_apply.py", line 86, in parallel_apply
    output.reraise()
  File "/home/guest1/.conda/envs/ellen/lib/python3.7/site-packages/torch/_utils.py", line 434, in reraise
    raise exception
RuntimeError: Caught RuntimeError in replica 3 on device 3.
Original Traceback (most recent call last):
  File "/home/guest1/.conda/envs/ellen/lib/python3.7/site-packages/torch/nn/parallel/parallel_apply.py", line 61, in _worker
    output = module(*input, **kwargs)
  File "/home/guest1/.conda/envs/ellen/lib/python3.7/site-packages/torch/nn/modules/module.py", line 1102, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/guest1/ellen_code/pytorch-CycleGAN-and-pix2pix_ellen/models/networks.py", line 1363, in forward
    result_scattering = self.scattering_model(input)
  File "/home/guest1/.conda/envs/ellen/lib/python3.7/site-packages/torch/nn/modules/module.py", line 1102, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/guest1/ellen_code/pytorch-CycleGAN-and-pix2pix_ellen/models/networks.py", line 1171, in forward
    scattering3 = self.scattering_down_3(out2)
  File "/home/guest1/.conda/envs/ellen/lib/python3.7/site-packages/torch/nn/modules/module.py", line 1102, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/guest1/ellen_code/pytorch-CycleGAN-and-pix2pix_ellen/models/networks.py", line 1082, in forward
    scatter_ouput = self.Scattering.scattering(x)
  File "/home/guest1/.conda/envs/ellen/lib/python3.7/site-packages/kymatio/scattering2d/frontend/torch_frontend.py", line 99, in scattering
    self.L, phi, psi, self.max_order, self.out_type)
  File "/home/guest1/.conda/envs/ellen/lib/python3.7/site-packages/kymatio/scattering2d/core/scattering2d.py", line 38, in scattering2d
    U_1_c = modulus(U_1_c)
  File "/home/guest1/.conda/envs/ellen/lib/python3.7/site-packages/kymatio/backend/torch_backend.py", line 140, in modulus
    norm = ModulusStable.apply(x)[..., None]
  File "/home/guest1/.conda/envs/ellen/lib/python3.7/site-packages/kymatio/backend/torch_backend.py", line 57, in forward
    output = (x[...,0] * x[...,0] + x[...,1] * x[...,1]).sqrt()
RuntimeError: CUDA out of memory. Tried to allocate 2.00 MiB (GPU 3; 11.91 GiB total capacity; 206.45 MiB already allocated; 5.00 MiB free; 696.00 MiB reserved in total by PyTorch) If reserved memory is >> allocated memory try setting max_split_size_mb to avoid fragmentation.  See documentation for Memory Management and PYTORCH_CUDA_ALLOC_CONF